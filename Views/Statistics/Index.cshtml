@model IEnumerable<BeFit.Models.ExerciseStatViewModel>
@{
    ViewData["Title"] = "Statystyki treningowe";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>
            <i class="bi bi-graph-up"></i>
            @ViewData["Title"]
        </h1>
        <span class="badge gradient-button">
            <i class="bi bi-calendar3"></i>
            Ostatnie 4 tygodnie
        </span>
    </div>

    @if (!Model.Any())
    {
        <div class="card">
            <div class="text-center py-5">
                <i class="bi bi-graph-up text-muted" style="font-size: 3rem;"></i>
                <p class="mt-3 text-muted mb-0">Brak danych do wyświetlenia</p>
                <a asp-controller="TrainingSessions" asp-action="Create" class="btn gradient-button mt-3">
                    <i class="bi bi-plus-circle"></i>
                    Rozpocznij trening
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var stat in Model)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100">
                        <div class="card-header bg-white py-3">
                            <div class="d-flex align-items-center">
                                <div class="stat-icon">
                                    <i class="bi bi-activity"></i>
                                </div>
                                <h3 class="card-title mb-0">@stat.ExerciseName</h3>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="stat-grid">
                                <div class="stat-item">
                                    <div class="stat-label">Liczba treningów</div>
                                    <div class="stat-value">@stat.TotalSessions</div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-label">Suma powtórzeń</div>
                                    <div class="stat-value">@stat.TotalRepetitions</div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-label">Średni ciężar</div>
                                    <div class="stat-value">@stat.AverageWeight kg</div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-label">Maksymalny ciężar</div>
                                    <div class="stat-value">
                                        @stat.MaxWeight kg
                                        @if (stat.WeightProgress > 0)
                                        {
                                            <span class="progress-indicator positive">
                                                <i class="bi bi-arrow-up-short"></i>
                                                +@stat.WeightProgress
                                            </span>
                                        }
                                        else if (stat.WeightProgress < 0)
                                        {
                                            <span class="progress-indicator negative">
                                                <i class="bi bi-arrow-down-short"></i>
                                                @stat.WeightProgress
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="text-muted mt-3 small">
                                Ostatni trening: @stat.LastTrainingDate.ToString("dd.MM.yyyy HH:mm")
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    :root {
        --pink-bg: #ffe6e6;
        --pink-darker: #ffb3b3;
        --mint-gradient: #98e4c9;
        --success-color: #28a745;
        --danger-color: #dc3545;
    }

    .card {
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .gradient-button {
        background: linear-gradient(to right, var(--pink-darker), var(--mint-gradient));
        border: none;
        color: white;
        padding: 0.5rem 1.25rem;
        border-radius: 2rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: opacity 0.2s;
    }

    .gradient-button:hover {
        opacity: 0.9;
        color: white;
    }

    .card-header {
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: 500;
        color: #444;
        margin-left: 1rem;
    }

    .stat-icon {
        width: 2.5rem;
        height: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(to right, var(--pink-darker), var(--mint-gradient));
        color: white;
        border-radius: 0.75rem;
    }

    .stat-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1.5rem;
    }

    .stat-item {
        text-align: center;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #666;
        margin-bottom: 0.25rem;
    }

    .stat-value {
        font-size: 1.25rem;
        font-weight: 500;
        color: #444;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .progress-indicator {
        font-size: 0.875rem;
        padding: 0.125rem 0.375rem;
        border-radius: 1rem;
        display: inline-flex;
        align-items: center;
    }

    .progress-indicator.positive {
        background-color: rgba(40, 167, 69, 0.1);
        color: var(--success-color);
    }

    .progress-indicator.negative {
        background-color: rgba(220, 53, 69, 0.1);
        color: var(--danger-color);
    }
</style>

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}